{
  "name": "babel-plugin-transform-es2015-modules-commonjs",
  "version": "6.22.0",
  "description": "This plugin transforms ES2015 modules to CommonJS",
  "repository": {
    "type": "git",
    "url": "https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-es2015-modules-commonjs"
  },
  "license": "MIT",
  "main": "lib/index.js",
  "dependencies": {
    "babel-types": "^6.22.0",
    "babel-runtime": "^6.22.0",
    "babel-template": "^6.22.0",
    "babel-plugin-transform-strict-mode": "^6.22.0"
  },
  "keywords": [
    "babel-plugin"
  ],
  "devDependencies": {
    "babel-helper-plugin-test-runner": "^6.22.0"
  },
  "readme": "# babel-plugin-transform-es2015-modules-commonjs\n\n> This plugin transforms ES2015 modules to [CommonJS](http://wiki.commonjs.org/wiki/Modules/1.1).\n\n## Example\n\n**In**\n\n```javascript\nexport default 42;\n```\n\n**Out**\n\n```javascript\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = 42;\n```\n\n## Installation\n\n```sh\nnpm install --save-dev babel-plugin-transform-es2015-modules-commonjs\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```js\n// without options\n{\n  \"plugins\": [\"transform-es2015-modules-commonjs\"]\n}\n\n// with options\n{\n  \"plugins\": [\n    [\"transform-es2015-modules-commonjs\", {\n      \"allowTopLevelThis\": true\n    }]\n  ]\n}\n```\n\n### Via CLI\n\n```sh\nbabel --plugins transform-es2015-modules-commonjs script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  plugins: [\"transform-es2015-modules-commonjs\"]\n});\n```\n\n## Options `loose`\n\nAs per the spec, `import` and `export` are only allowed to be used at the top\nlevel. When in loose mode these are allowed to be used anywhere.\n\nAnd by default, when using exports with babel a non-enumerable `__esModule` property\nis exported.\n\n```javascript\nvar foo = exports.foo = 5;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n```\n\nIn environments that don't support this you can enable loose mode on `es6.modules`\nand instead of using `Object.defineProperty` an assignment will be used instead.\n\n```javascript\nvar foo = exports.foo = 5;\nexports.__esModule = true;\n```\n",
  "readmeFilename": "README.md",
  "_id": "babel-plugin-transform-es2015-modules-commonjs@6.22.0",
  "dist": {
    "shasum": "e191f0d17b21aae06be3a55e35072d5cb15b793b"
  },
  "_from": "babel-plugin-transform-es2015-modules-commonjs@^6.22.0",
  "_resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-modules-commonjs/-/babel-plugin-transform-es2015-modules-commonjs-6.22.0.tgz"
}
