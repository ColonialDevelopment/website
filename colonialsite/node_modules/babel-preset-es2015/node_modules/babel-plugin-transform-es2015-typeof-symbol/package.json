{
  "name": "babel-plugin-transform-es2015-typeof-symbol",
  "version": "6.22.0",
  "description": "This transformer wraps all typeof expressions with a method that replicates native behaviour. (ie. returning “symbol” for symbols)",
  "repository": {
    "type": "git",
    "url": "https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-es2015-typeof-symbol"
  },
  "license": "MIT",
  "main": "lib/index.js",
  "keywords": [
    "babel-plugin"
  ],
  "dependencies": {
    "babel-runtime": "^6.22.0"
  },
  "devDependencies": {
    "babel-helper-plugin-test-runner": "^6.22.0"
  },
  "readme": "# babel-plugin-transform-es2015-typeof-symbol\n\n> ES6 introduces a new native type called [symbols](https://babeljs.io/learn-es2015/#ecmascript-2015-features-symbols). This transformer wraps all `typeof` expressions with a method that replicates native behaviour. (ie. returning \"symbol\" for symbols)\n\n## Example\n\n**In**\n\n```javascript\ntypeof Symbol() === \"symbol\";\n```\n\n**Out**\n\n```javascript\nvar _typeof = function (obj) {\n  return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n\n_typeof(Symbol()) === \"symbol\";\n```\n\n## Installation\n\n```sh\nnpm install --save-dev babel-plugin-transform-es2015-typeof-symbol\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"transform-es2015-typeof-symbol\"]\n}\n```\n\n### Via CLI\n\n```sh\nbabel --plugins transform-es2015-typeof-symbol script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  plugins: [\"transform-es2015-typeof-symbol\"]\n});\n```\n",
  "readmeFilename": "README.md",
  "_id": "babel-plugin-transform-es2015-typeof-symbol@6.22.0",
  "dist": {
    "shasum": "116e8e699e31c2cdba46f64d0d0e2d9dfcef4483"
  },
  "_from": "babel-plugin-transform-es2015-typeof-symbol@^6.22.0",
  "_resolved": "https://registry.npmjs.org/babel-plugin-transform-es2015-typeof-symbol/-/babel-plugin-transform-es2015-typeof-symbol-6.22.0.tgz"
}
